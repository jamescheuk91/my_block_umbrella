# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/elixir:1.5.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
          paths:
            - ~/repo
  build_test_env:
    docker:
      - image: circleci/elixir:1.5.1
    working_directory: ~/repo
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          key: v2-phantomjs-2-1-1
      - restore_cache:
          key: v1-mix
      - restore_cache:
          key: v1-build-{{ checksum "mix.lock" }}
      - run:
          name: Install PhantomJS Dependencies and PhantomJS
          command: |
            if [ ! -e ~/phantomjs ] ; then
              sudo apt-get update
              sudo apt-get install -y fontconfig wget
              sudo wget -O /tmp/phantomjs.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
              sudo tar -xjf /tmp/phantomjs.tar.bz2 -C /tmp
              sudo mv /tmp/phantomjs-2.1.1-linux-x86_64/bin/phantomjs ~/phantomjs
            fi
      - save_cache:
          key: v2-phantomjs-2-1-1
          paths:
            - ~/phantomjs
      - run: mix local.hex --force; mix local.rebar --force
      - save_cache:
          key: v1-mix
          paths:
            - /home/circleci/.mix
      - run: MIX_ENV=test mix deps.get --only test;
      - run: MIX_ENV=test mix compile;
      - save_cache:
          key: v1-build-{{ checksum "mix.lock" }}
          paths:
            - ~/repo/deps
            - ~/repo/_build
  unit_test:
    docker:
      - image: circleci/elixir:1.5.1
      - image: circleci/postgres:9.6.4
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - POSTGRES_DB=my_block_test
    working_directory: ~/repo
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          key: v1-mix
      - restore_cache:
          key: v1-build-{{ checksum "mix.lock" }}
      - run:
          name: run test database setup
          command:  |
            MIX_ENV=test mix ecto.create;
            MIX_ENV=test mix ecto.migrate;
      - run: MIX_ENV=test mix unit_test

  controller_test:
    docker:
      - image: circleci/elixir:1.5.1
      - image: circleci/postgres:9.6.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    working_directory: ~/repo
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          key: v1-mix
      - restore_cache:
          key: v1-build-{{ checksum "mix.lock" }}
      - run:
          name: run test database setup
          command:  |
            MIX_ENV=test mix ecto.create;
            MIX_ENV=test mix ecto.migrate;
      - run: MIX_ENV=test mix controller_test

  integration_test:
    docker:
      - image: circleci/elixir:1.5.1
      - image: circleci/postgres:9.6.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    working_directory: ~/repo
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          key: v1-mix
      - restore_cache:
          key: v1-build-{{ checksum "mix.lock" }}
      - run:
          name: run test database setup
          command:  |
            MIX_ENV=test mix ecto.create;
            MIX_ENV=test mix ecto.migrate;
      - run: MIX_ENV=test mix integration_test

  e2e_test:
    machine:
    docker:
      - image: circleci/elixir:1.5.1
      - image: circleci/postgres:9.6.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    working_directory: ~/repo
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          key: v2-phantomjs-2-1-1
      - restore_cache:
          key: v1-mix
      - restore_cache:
          key: v1-build-{{ checksum "mix.lock" }}
      - run:
          name: run test database setup
          command: MIX_ENV=test mix ecto.create; MIX_ENV=test mix ecto.migrate;
      - run: ~/phantomjs --wd & MIX_ENV=test mix e2e_test

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - build_test_env:
          requires:
            - checkout_code
      - unit_test:
          requires:
            - build_test_env
      - controller_test:
          requires:
            - build_test_env

      - integration_test:
          requires:
            - build_test_env
      - e2e_test:
          requires:
            - build_test_env
            - unit_test
            - controller_test
            - integration_test
